[profile.default] # all profiles inherit from this
cache = false # !important! breaks echidna if cache = true.
libs = ['lib', 'node_modules'] 
out = 'out' # default
remappings = [
  'forge-std/=lib/forge-std/src/',
  'solmate/=lib/solmate/src/',
  'solstat/=lib/solstat/src/',
  'nugu/=lib/nugu/src/',
] 
solc = '0.8.19' 
src = 'contracts' 
test = 'test' # default

[profile.optimized] # uses via_ir and optimizer
optimizer = true
optimizer_runs = 0
out = 'optimized-out'
via_ir = true

[profile.optimizedcalls]
optimizer = true
optimizer_runs = 10000
out = 'optimized-out'
via_ir = true

[profile.test] # does not use optimizer
ffi = true 
gas_reports = ["*"] 
src = 'test/' # not default

[profile.echidna]
src = 'test/echidna' # not default
test = 'test/echidna' # not default
via_ir = false 

[rpc_endpoints]
anvil = "http://127.0.0.1:8545"
primitive = "${PRIMITIVE_RPC}"
prod = "${MAINNET_URL}"

[fmt]
bracket_spacing = true
int_types = 'long'
line_length = 80
multiline_func_header = 'params_first'
quote_style = 'double'
tab_width = 4
wrap_comments = false

# See more config options https://github.com/gakonst/foundry/tree/master/config

[fuzz]
# The number of fuzz runs for fuzz tests
runs = 1000
# The maximum number of test case rejections allowed by proptest, to be
# encountered during usage of `vm.assume` cheatcode. This will be used
# to set the `max_global_rejects` value in proptest test runner config.
# `max_local_rejects` option isn't exposed here since we're not using
# `prop_filter`.
max_test_rejects = 120000
# The weight of the dictionary
dictionary_weight = 40
# The flag indicating whether to include values from storage
include_storage = true
# The flag indicating whether to include push bytes values
include_push_bytes = true

[invariant]
# The number of runs that must execute for each invariant test group
runs = 256
# The number of calls executed to attempt to break invariants in one run
depth = 100
# Fails the invariant fuzzing if a revert occurs
fail_on_revert = false
# Allows overriding an unsafe external call when running invariant tests. eg. reentrancy checks
call_override = false
# The weight of the dictionary
dictionary_weight = 80
# The flag indicating whether to include values from storage
include_storage = true
# The flag indicating whether to include push bytes values
include_push_bytes = true
